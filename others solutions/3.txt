--practice3 :

--How many data blocks are allocated in the database for 
--the table NIKOVITS.CIKK?
--There can be empty blocks, but we count them too.
--The same question: how many data blocks does the segment 
--of the table have?

select blocks from dba_segments
where owner = 'NIKOVITS' and segment_name = 'CIKK'
and segment_type = 'TABLE';

--How many filled data blocks does the previous table have?
--Filled means that the block is not empty 
--(there is at least one row in it).
--This question is not the same as the previous !!!
--How many empty data blocks does the table have?

select distinct dbms_rowid.rowid_relative_fno(ROWID) file_id,
 dbms_rowid.rowid_object(ROWID) data_object, 
 dbms_rowid.rowid_block_number(ROWID) block_nr
from nikovits.cikk;

select count(*) from
 (select distinct dbms_rowid.rowid_relative_fno(ROWID) file_id,
  dbms_rowid.rowid_object(ROWID) data_object,
  dbms_rowid.rowid_block_number(ROWID) block_nr
  from nikovits.cikk);

--How many rows are there in each block of the previous table?

select dbms_rowid.rowid_relative_fno(ROWID) file_no,
 dbms_rowid.rowid_block_number(ROWID) block_no, count(*)
from nikovits.cikk
group by dbms_rowid.rowid_relative_fno(ROWID),
dbms_rowid.rowid_block_number(ROWID);

--There is a table NIKOVITS.ELADASOK@ullman 
--which has the following row:
--szla_szam = 100 (szla_szam is a column name)
--In which datafile is the given row stored?
--Within the datafile in which block? (block number) 
--In which data object? (Give the name of the segment.)

select * from nikovits.eladasok@ullman;

select * from nikovits.cikk where ckod = 118;

select dbms_rowid.rowid_relative_fno(ROWID) file_id,
dbms_rowid.rowid_object(ROWID) data_object,
dbms_rowid.rowid_block_number(ROWID) block_nr,
dbms_rowid.rowid_row_number(ROWID) row_nr
from nikovits.cikk where ckod = 118;

select * from dba_data_files where file_id = 2;
select * from dba_objects where data_object_id = 73647;

select dbms_rowid.rowid_relative_fno(c.ROWID) file_id, f.file_name
from nikovits.cikk c, dba_data_files f
where ckod = 118 and dbms_rowid.rowid_relative_fno(c.ROWID) = f.file_id;

/*
Write a PL/SQL procedure which prints out the number of rows in 
each data block for the following table: NIKOVITS.TABLA_123. 
The output has 3 columns: file_id, block_id, num_of_rows.
*/

select dbms_rowid.rowid_relative_fno(ROWID) file_no,
 dbms_rowid.rowid_block_number(ROWID) block_no, count(*)
from nikovits.tabla_123
group by dbms_rowid.rowid_relative_fno(ROWID),
dbms_rowid.rowid_block_number(ROWID);

create or replace procedure num_of_rows is
begin
    for rec in (select dbms_rowid.rowid_relative_fno(ROWID) file_no,
       dbms_rowid.rowid_block_number(ROWID) block_no, count(*) cnt
       from nikovits.tabla_123
       group by dbms_rowid.rowid_relative_fno(ROWID),
       dbms_rowid.rowid_block_number(ROWID)) loop
       
        dbms_output.put_line(rec.file_no||'-'||rec.block_no||'-'||rec.cnt);
    end loop; 
end;
/

set serveroutput on
execute num_of_rows();

CREATE OR REPLACE PROCEDURE num_of_rows1 IS
 cnt NUMBER;
BEGIN 
 FOR rec IN (select file_id, block_id, blocks from dba_extents 
             where owner='NIKOVITS' and segment_name='TABLA_123' order by 1,2,3)
 LOOP
  FOR i in 1..rec.blocks LOOP
   SELECT count(*) into cnt FROM nikovits.tabla_123 
   WHERE dbms_rowid.rowid_relative_fno(ROWID) = rec.file_id
   AND dbms_rowid.rowid_block_number(ROWID) = rec.block_id+i-1;
   dbms_output.put_line(rec.file_id||'.'||to_char(rec.block_id+i-1)||'->'||cnt);
  END LOOP;
 END LOOP;
END;
/

execute num_of_rows1();


select file_id, block_id, blocks from dba_extents 
where owner='NIKOVITS' and segment_name='TABLA_123' order by 1,2,3;

select dbms_rowid.rowid_relative_fno(ROWID) file_no,
       dbms_rowid.rowid_block_number(ROWID) block_no, count(*) cnt
       from nikovits.tabla_123
       group by dbms_rowid.rowid_relative_fno(ROWID),
       dbms_rowid.rowid_block_number(ROWID);
       
/*
Write a PL/SQL procedure which counts and prints the number of 
empty blocks of a table.
*/

create or replace procedure empty_blocks(p_owner varchar2, p_table varchar2) is
    bnum integer;
    bfilled integer;
    bempty integer;
begin
    select blocks into bnum from dba_segments
    where lower(owner) = p_owner and lower(segment_name) = p_table
    and segment_type = 'TABLE';

    execute immediate 'select count(*) from
     (select distinct dbms_rowid.rowid_relative_fno(ROWID) file_id,
      dbms_rowid.rowid_object(ROWID) data_object,
      dbms_rowid.rowid_block_number(ROWID) block_nr
      from '||p_owner||'.'||p_table||')' into bfilled;
      
    bempty := bnum - bfilled;
    
    dbms_output.put_line(bempty);
end;
/

set serveroutput on
execute empty_blocks('nikovits', 'employees');

select count(*) from
     (select distinct dbms_rowid.rowid_relative_fno(ROWID) file_id,
      dbms_rowid.rowid_object(ROWID) data_object,
      dbms_rowid.rowid_block_number(ROWID) block_nr
      from nikovits.employees);

select count(*) from
 (select distinct dbms_rowid.rowid_relative_fno(ROWID) file_id,
  dbms_rowid.rowid_object(ROWID) data_object,
  dbms_rowid.rowid_block_number(ROWID) block_nr
  from nikovits.employees);

select blocks into bnum from dba_segments
    where lower(owner) = 'nikovits' and lower(segment_name) = 'employees'
    and segment_type = 'TABLE';


create or replace procedure check_for_rows_num is
  bnum integer;
begin
  select blocks into bnum from dba_segments
    where lower(owner) = 'nikovits' and lower(segment_name) = 'employees'
    and segment_type = 'TABLE';

  
  dbms_output.put_line(bnum);
exception
  when no_data_found then
    dbms_output.put_line('No record avialable');
  when too_many_rows then
   dbms_output.put_line('Too many rows');
end;
/

execute check_for_rows_num();