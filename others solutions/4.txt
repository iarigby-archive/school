-- practice4:

--Give the tables (table_name) which has a column indexed 
--in descending order.
--(In the solutions only objects of Nikovits are concerned.)

select * from dba_ind_columns where descend = 'DESC'
and index_owner = 'NIKOVITS';

--See the name of the column. Why is it so strange? 
--> DBA_IND_EXPRESSIONS.COLUMN_NAME

select * from dba_ind_columns where index_name = 'EMP2'
and index_owner = 'NIKOVITS';

select * from dba_ind_expressions where index_name = 'EMP2'
and index_owner = 'NIKOVITS';

--Give the indexes (index name) which are composite and
--have at least 9 columns (expressions).

select index_owner, index_name
from dba_ind_columns
group by index_owner, index_name
having count(*) > 8;

-- confirm one of them

select * from dba_ind_columns
where index_owner = 'SYS' and index_name = 'I_OBJ2';

--Give the name of bitmap indexes on table NIKOVITS.CUSTOMERS. 
--(Ullman database)

select * from dba_indexes;

select * from dba_indexes
where table_owner = 'NIKOVITS' and table_name = 'CUSTOMERS'
and index_type = 'BITMAP';

--Give the indexes of owner NIKOVITS which has at least 2 columns
--and are function-based.

select index_owner, index_name from dba_ind_columns
group by index_owner, index_name having count(*) > 1
 intersect
select index_owner, index_name from dba_ind_expressions
where index_owner = 'NIKOVITS';

--Give for one of the above indexes the expression 
--for which the index was created.

select * from dba_ind_expressions where index_owner = 'NIKOVITS';

select index_name, column_expression from dba_ind_expressions where index_owner = 'NIKOVITS';


/*
Write a PL/SQL procedure which prints out the names and sizes (in bytes)
of indexes created on the parameter table.
*/

select index_owner, index_name from dba_ind_columns
 intersect
select owner, segment_name from dba_segments;

select owner, segment_name, bytes from dba_segments
where segment_type = 'INDEX';

select segment_name, bytes from dba_segments
where segment_type = 'INDEX'
and segment_name = 'EMP2' and owner = 'NIKOVITS';

create or replace procedure list_indexes(p_owner varchar2, p_table varchar2) is
begin
    
    for rec in (select * from dba_segments
        where segment_type = 'INDEX' and lower(owner) = lower(p_owner) 
        and lower(segment_name) = lower(p_table)) loop
     
        dbms_output.put_line(rec.segment_name||'-'||rec.bytes);
    
    end loop;
end;
/

set serveroutput on
execute list_indexes('nikovits', 'emp2');

create or replace procedure list_indexes1(p_owner varchar2) is
begin
    
    for rec in (select * from dba_segments
        where segment_type = 'INDEX' and lower(owner) = lower(p_owner) 
        ) loop
     
        dbms_output.put_line(rec.segment_name||'-'||rec.bytes);
    
    end loop;
end;
/

execute list_indexes1('nikovits');