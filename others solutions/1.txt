--practice 1:

--Who is the owner of the view DBA_TABLES? Who is the owner of table DUAL?

select * from dba_tables;

select * from dba_objects where upper(object_name) = 'DBA_TABLES';

select owner from dba_objects
where object_name = 'DBA_TABLES' and object_type = 'VIEW';

--Who is the owner of synonym DBA_TABLES? (or DUAL)

select owner from dba_objects
where object_name = 'DBA_TABLES' and object_type = 'SYNONYM';

--What kind of objects the database user ORAUSER has? (dba_objects.object_type column)

select distinct object_type from dba_objects
where owner = 'ORAUSER';

--What are the object types existing in the database?

select distinct object_type from dba_objects;

--Which users have more than 10 different kind of objects in the database?

select owner, count(object_type) from dba_objects
group by owner
having count(object_type) > 10;

--Which users have both triggers and views in the database?

select owner, object_type from dba_objects;

select distinct o1.owner, o1.object_type, o2.object_type 
from dba_objects o1 inner join dba_objects o2 on o1.owner = o2.owner
where o1.object_type = 'VIEW' and o2.object_type = 'TRIGGER'
and o1.owner = o2.owner;

--Which users have views but don't have triggers?

select distinct owner from dba_objects
where object_type = 'VIEW'
 minus
select distinct owner from dba_objects
where object_type = 'TRIGGER';


--Which users have more than 40 tables, but less than 30 indexes?

select distinct owner from dba_objects
where object_type = 'TABLE'
group by owner
having count(object_type) > 40
 minus
select distinct owner from dba_objects
where object_type = 'INDEX'
group by owner
having count(object_type) < 30;

--Which object types have NULL (or 0) in the column data_object_id?

select distinct owner, data_object_id from dba_objects
where data_object_id is null;

--Which object types have non NULL (and non 0) in the column data_object_id?

select distinct owner from dba_objects
where data_object_id is not null;

--What is the intersection of the previous 2 queries?

select distinct o1.owner 
from dba_objects o1 inner join dba_objects o2 on o1.owner = o2.owner
where o1.data_object_id is not null and o2.data_object_id is null;

--How many columns the nikovits.emp table has?

select * from nikovits.emp;

select count(column_name) from dba_tab_columns
where table_name = 'EMP' and owner = 'NIKOVITS';

--Give the owner and name of the tables which have column name 
--beginning with letter 'Z'.

select owner, table_name, column_name from dba_tab_columns
where column_name like 'Z%';

--Give the owner and name of the tables which have at least 8 date columns.

select * from dba_tab_columns;

select owner, table_name from dba_tab_columns
where data_type = 'DATE'
group by owner, table_name
having count(data_type) > 7;

--Give the owner and name of the tables whose 1st and 
--4th column's datatype is VARCHAR2.

select owner, table_name from dba_tab_columns
where data_type = 'VARCHAR2' and column_id = 1
 intersect
select owner, table_name from dba_tab_columns
where data_type = 'VARCHAR2' and column_id = 4; 


/*
Write a PL/SQL procedure, which prints out the owners and names 
of the tables beginning with the parameter character string. 
*/

select owner, table_name from dba_tables
where table_name like 'A%';

create or replace procedure table_print(p_char varchar2) is
begin
    for rec in (select owner, table_name from dba_tables
                where table_name like p_char||'%') loop
             
        dbms_output.put_line(rec.owner||'-'||rec.table_name);
           
    end loop;
end;
/

set serveroutput on
execute table_print('V');