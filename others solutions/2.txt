--practice2 :

--Give the following query (in ARAMIS database):

select * from sz1;

--Is there a table named 'sz1' ? (Answer -> no)

select * from dba_tables where table_name ='SZ1';

--Then which is the table (owner, table_name) whose records are displayed?

select owner, object_name from dba_objects where object_name = 'SZ1';

SELECT * from dba_objects where lower(object_name) like 'sz1%';
SELECT * FROM DBA_SYNONYMS WHERE owner='PUBLIC' AND synonym_name like'SZ1%';
SELECT * from dba_objects where lower(object_name) like 'v1%' and owner='NIKOVITS';
SELECT view_name, text FROM DBA_VIEWS WHERE owner='NIKOVITS' AND view_name='V1';
SELECT * from dba_objects where lower(object_name) like 'employ%' and owner='NIKOVITS';

--Create your own copy of EMP and DEPT tables (if you don't have already).

create table emp as select * from nikovits.emp;
create table dept as select * from nikovits.dept;

--Create a sequence to generate numbers for department
--number columns of the tables.
--(start with 50, increment by 10)

create sequence deptseq
minvalue 50 increment by 10
start with 50;

create sequence deptseq1
minvalue 1 maxvalue 100 increment by 1
start with 50 CYCLE;

--INSERT 2 new departments and 3 employees for each department. 
--The department numbers should be generated by the sequence.

select * from dept;

select deptseq.currval from dept;
select deptseq.nextval from dual;


insert into dept values (deptseq1.nextval,'DNAME5', 'LOC5');


--We have two Oracle databases ARAMIS and ULLMAN. 
--Create a database link in database ULLMAN pointing to database 
--ARAMIS with the following statement:

CREATE DATABASE LINK aramis CONNECT TO username IDENTIFIED BY password       -- your username/password
USING 'aramis.inf.elte.hu:1521/aramis.inf.elte.hu';

CREATE DATABASE LINK ullman CONNECT TO username IDENTIFIED BY fcgygf       -- your username/password
USING 'ullman.inf.elte.hu:1521/ullman';


--Query a table in database ARAMIS while connecting to ULLMAN:
-- in ullman:

select * from nikovits.emp@aramis;

--See the following two tables about countries and rivers:

select * from nikovits.countries_v;

select * from nikovits.rivers_v@ullman;

--Give the names of countries through which the Mekong flows.

select rname, countries from nikovits.rivers_v@ullman
where rname = 'Mekong';


select c.tld, c.cname from nikovits.countries_v c, nikovits.rivers_v@ullman r
where r.rname = 'Mekong' and r.countries like '%'||c.tld||'%';

--*Give the names of countries in the order of flowing (down the river).
-- -> see function INSTR

select c.tld, c.cname from nikovits.countries_v c, nikovits.rivers_v@ullman r
where r.rname = 'Mekong' and r.countries like '%'||c.tld||'%'
order by instr(r.countries, c.tld);

--------------
--------------

--Give the names and sizes of database files.

select * from dba_data_files;
select file_name, bytes from dba_data_files;

--Give the names of tablespaces.

select * from dba_tablespaces;
select tablespace_name from dba_tablespaces;

--Which datafile belongs to which tablespace? (filename, tablespace_name)

select file_name, tablespace_name from dba_data_files;

--Is there a tablespace that doesn't have datafiles? -> see temp_files

select * from dba_temp_files;

select tablespace_name from dba_tablespaces
where tablespace_name not in
(select tablespace_name from dba_data_files);

select tablespace_name from dba_temp_files;

--What is the block size in USERS tablespace?

select * from dba_tablespaces;
select block_size from dba_tablespaces
where tablespace_name = 'USERS';

--Find some segments whose owner is NIKOVITS. 
--What segment types do they have? List the types.

select * from dba_segments;
select * from dba_segments where owner = 'NIKOVITS';
select distinct segment_type from dba_segments
where owner = 'NIKOVITS';

--How many extents there are in file 'users02.dbf' ?

select * from dba_extents; 
select * from dba_data_files;
select * from dba_data_files where file_name like '%users02.dbf';
select * from dba_extents where file_id = 2;
select count(*) from dba_extents where file_id = 2;

select count(*) from dba_extents e, dba_data_files f
where f.file_name like '%users02.dbf' and e.file_id = f.file_id;

--How many bytes do they (extents in the file) occupy?

select sum(e.bytes) from dba_extents e, dba_data_files f
where f.file_name like '%users02.dbf' and e.file_id = f.file_id;

--How many free extents there are in file 'users02.dbf', 
--and what is the summarized size of them ?

select * from dba_free_space;

select * from dba_data_files;

select count(fr.bytes), sum(fr.bytes), f.file_name
from dba_data_files f, dba_free_space fr
where file_name like '%/users02%' and f.file_id = fr.file_id
group by f.file_name;

SELECT count(fr.bytes), sum(fr.bytes), f.bytes 
FROM dba_data_files f, dba_free_space fr
WHERE file_name LIKE '%/users02%' AND f.file_id=fr.file_id
GROUP BY f.bytes;

--How many percentage of file 'users02.dbf' is full 
--(allocated to some object)?

select (f.bytes - sum(fr.bytes))/f.bytes
from dba_data_files f, dba_free_space fr
where file_name like '%users02%' and f.file_id = fr.file_id
group by f.bytes;


select sum(e.bytes)/f.bytes
from dba_extents e, dba_data_files f
where file_name like '%users02%' and e.file_id = f.file_id
group by f.bytes;

--Who is the owner whose objects (e.g. INDEXES) 
--occupy the most space in the database?
--> the first row will show

select * from dba_segments;
select owner, sum(bytes) from dba_segments
where segment_type = 'INDEX'
group by owner order by 2 desc;

select * from
 (select owner, sum(bytes) from dba_segments
  where segment_type = 'INDEX'
  group by owner order by 2 desc)
where rownum < 2;


--Is there a table of owner NIKOVITS 
--that has extents in more than one datafile? (Aramis)

select * from dba_extents
where owner = 'NIKOVITS' and segment_type = 'TABLE';

select segment_name, count(distinct file_id) from dba_extents
where owner = 'NIKOVITS' and segment_type = 'TABLE'
group by segment_name
having count(distinct file_id) > 1;

--Select one from the above tables (e.g. tabla_123) and give the occupied
--space by files. (filename, bytes)

select file_id, sum(bytes) from dba_extents
where owner = 'NIKOVITS' and segment_name = 'TABLA_123'
group by file_id;

select f.file_name, sum(e.bytes) from dba_extents e, dba_data_files f
where e.owner = 'NIKOVITS' and e.segment_name = 'TABLA_123'
and e.file_id = f.file_id
group by f.file_name;

--On which tablespace is table ORAUSER.dolgozo?

select tablespace_name from dba_segments
where segment_name = 'DOLGOZO' and owner = 'ORAUSER';

/*
Write a PL/SQL procedure, 
which prints out for the parameter user his/her oldest table 
(which was created earliest)
the size of the table in bytes (the size of the table's segment)
and the creation date. 
(table_name, bytes, created)
*/

select * from dba_objects
where object_type = 'TABLE' and owner = 'ORAUSER';

select owner, object_name, created from dba_objects
where object_type = 'TABLE' and owner = 'ORAUSER'
order by 3 asc;

select min(created) from dba_objects
where object_type = 'TABLE' and owner = 'ORAUSER'
group by owner;

select * from
 (select owner, object_name, created from dba_objects
  where object_type = 'TABLE' and owner = 'ORAUSER'
  order by 3 asc)
where rownum < 2;
 
select * from
(select * from
 (select owner, object_name, created from dba_objects
  where object_type = 'TABLE' and owner = 'ORAUSER'
  order by 3 asc)
 where rownum < 2);

select segment_name, count(segment_name) from dba_segments
group by segment_name
order by 2 desc;

select owner, segment_name, sum(bytes) from dba_segments
where owner = 'ORAUSER' and segment_name = 'DEPT'
group by owner, segment_name; 

select object_name, sum(bytes), created from
 (select owner, object_name, created from dba_objects
  where object_type = 'TABLE' and owner = 'ORAUSER'
  order by 3 asc) o, dba_segments s
where rownum < 2 and o.object_name = s.segment_name
group by object_name, created;

create or replace procedure oldest_table(p_user varchar2) is
    aname varchar2(120);
    asum integer;
    acreated date;
begin
    select object_name, sum(bytes), created 
    into aname, asum, acreated
    from
    (select owner, object_name, created from dba_objects
     where object_type = 'TABLE' and owner = p_user
     order by 3 asc) o, dba_segments s
    where rownum < 2 and o.object_name = s.segment_name
    group by object_name, created;
    
    dbms_output.put_line(aname||' - '||asum||' - '||acreated);

end;
/
 
 set serveroutput on
 execute oldest_table('SYS');
