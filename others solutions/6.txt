6--practice6:

--Give the tables (table_name) which has a column indexed 
--in descending order.
--(In the solutions only objects of Nikovits are concerned.)

select index_name from dba_ind_columns
where index_owner = 'NIKOVITS' and descend = 'DESC';

--See the name of the column. Why is it so strange? -> DBA_IND_EXPRESSIONS

select * from dba_ind_columns 
where index_name = 'EMP2' and index_owner = 'NIKOVITS';

select * from dba_ind_expressions 
where index_name = 'EMP2' and index_owner = 'NIKOVITS';

--Give the indexes (index name) which are composite and have
--at least 9 columns (expressions).

select index_owner, index_name from dba_ind_columns
group by index_name, index_owner
having count(*) > 8;

-- confirm one of them
select * from dba_ind_columns
where index_name = 'I_OBJ2'; 

--Give the bitmap indexes on table NIKOVITS.CUSTOMERS. 
--(Only in ULLMAN database)

select distinct index_type from dba_indexes;

select * from dba_indexes
where index_type = 'BITMAP' and table_owner = 'NIKOVITS'
and table_name = 'CUSTOMERS';

--Give the indexes which has at least 2 columns and are function-based.

select index_owner, index_name from dba_ind_columns
group by index_owner, index_name
having count(*) > 1
 intersect
select index_owner, index_name from dba_ind_expressions;

--Give for one of the above indexes the expression for which 
--the index was created.

select column_expression from dba_ind_expressions
where index_name = 'EMP2' and index_owner = 'NIKOVITS';

--Give the index organized tables of user NIKOVITS.

select owner, table_name, iot_name, iot_type from dba_tables
where owner = 'NIKOVITS' and iot_type = 'IOT';

--Find the table_name, index_name and overflow name (if exists) 
--of the above tables.

select table_name, index_name, index_type from dba_indexes
where table_owner = 'NIKOVITS' and index_type like '%IOT%';

select owner, table_name, iot_name, iot_type from dba_tables
where owner = 'NIKOVITS' and iot_type = 'IOT_OVERFLOW';

--Give the names and sizes (in bytes) of the partitions 
--of table NIKOVITS.ELADASOK

select * from dba_part_tables 
where owner = 'NIKOVITS' and table_name = 'ELADASOK';

select * from dba_tab_partitions
where table_owner = 'NIKOVITS' and table_name = 'ELADASOK';


select segment_name, partition_name, segment_type, bytes
from dba_segments
where owner = 'NIKOVITS' and segment_name like 'ELADASOK' 
and segment_type like 'TABLE%';


--Which is the biggest partitioned table (in bytes) in the database?
--It can have subpartitions as well.

select * from
 (select owner, segment_name, sum(bytes)
  from dba_segments
  where segment_type like 'TABLE%PARTITION'
  group by owner, segment_name
  order by 3 desc)
where rownum < 2;


--Give a cluster whose cluster key consists of 3 columns.
--It can have more tables on it!!!

select * from dba_clu_columns;

select owner, cluster_name from dba_clu_columns
group by owner, cluster_name
having count(distinct clu_column_name) = 3;

-- confirm one of them

select * from dba_clu_columns
where owner = 'SYS' and cluster_name = 'C_FILE#_BLOCK#';

--How many clusters we have in the database 
--which uses NOT THE DEFAULT hash function?
--(So the creator defined a hash expression.)

select * from dba_cluster_hash_expressions;
